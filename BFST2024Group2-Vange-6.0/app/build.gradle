/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "org.openjfx.javafxplugin" version "0.1.0"
    id 'jacoco'
    id "com.adarshr.test-logger" version "3.1.0"
}

javadoc.options.encoding = 'UTF-8'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
    dependsOn test // tests are required to run before generating the report
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'org.openjfx:javafx-controls:22.0.1'
    implementation 'org.openjfx:javafx-fxml:22.0.1'
    implementation 'org.openjfx:javafx-base:22.0.1'
}

application {
    // Define the main class for the application.
    mainClass = 'handin2.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx{
    version = "22.0.1"
    modules = ['javafx.controls', 'javafx.fxml']
}


jar {
    manifest {
        attributes 'Main-Class': 'handin2.App'
    }
}

tasks.withType(JavaExec) {
    jvmArgs = ['-Xms512m', '-Xmx8G']
}
